<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jjx.mytools.dao.DictdefDao">
  <resultMap id="BaseResultMap" type="com.jjx.mytools.entity.Dictdef">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="dict_id" jdbcType="INTEGER" property="dictId" />
    <result column="dict_name" jdbcType="VARCHAR" property="dictName" />
    <result column="dict_flag" jdbcType="INTEGER" property="dictFlag" />
    <result column="dict_createdate" jdbcType="TIMESTAMP" property="dictCreatedate" />
    <result column="dict_updatedate" jdbcType="TIMESTAMP" property="dictUpdatedate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    dict_id, dict_name, dict_flag, dict_createdate, dict_updatedate
  </sql>
  <select id="selectByExample" parameterType="com.jjx.mytools.entity.DictdefExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from dictdef
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from dictdef
    where dict_id = #{dictId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dictdef
    where dict_id = #{dictId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jjx.mytools.entity.DictdefExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dictdef
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jjx.mytools.entity.Dictdef">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dictdef (dict_id, dict_name, dict_flag, 
      dict_createdate, dict_updatedate)
    values (#{dictId,jdbcType=INTEGER}, #{dictName,jdbcType=VARCHAR}, #{dictFlag,jdbcType=INTEGER}, 
      #{dictCreatedate,jdbcType=TIMESTAMP}, #{dictUpdatedate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jjx.mytools.entity.Dictdef">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dictdef
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        dict_id,
      </if>
      <if test="dictName != null">
        dict_name,
      </if>
      <if test="dictFlag != null">
        dict_flag,
      </if>
      <if test="dictCreatedate != null">
        dict_createdate,
      </if>
      <if test="dictUpdatedate != null">
        dict_updatedate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictId != null">
        #{dictId,jdbcType=INTEGER},
      </if>
      <if test="dictName != null">
        #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="dictFlag != null">
        #{dictFlag,jdbcType=INTEGER},
      </if>
      <if test="dictCreatedate != null">
        #{dictCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="dictUpdatedate != null">
        #{dictUpdatedate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jjx.mytools.entity.DictdefExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from dictdef
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dictdef
    <set>
      <if test="record.dictId != null">
        dict_id = #{record.dictId,jdbcType=INTEGER},
      </if>
      <if test="record.dictName != null">
        dict_name = #{record.dictName,jdbcType=VARCHAR},
      </if>
      <if test="record.dictFlag != null">
        dict_flag = #{record.dictFlag,jdbcType=INTEGER},
      </if>
      <if test="record.dictCreatedate != null">
        dict_createdate = #{record.dictCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dictUpdatedate != null">
        dict_updatedate = #{record.dictUpdatedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dictdef
    set dict_id = #{record.dictId,jdbcType=INTEGER},
      dict_name = #{record.dictName,jdbcType=VARCHAR},
      dict_flag = #{record.dictFlag,jdbcType=INTEGER},
      dict_createdate = #{record.dictCreatedate,jdbcType=TIMESTAMP},
      dict_updatedate = #{record.dictUpdatedate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jjx.mytools.entity.Dictdef">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dictdef
    <set>
      <if test="dictName != null">
        dict_name = #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="dictFlag != null">
        dict_flag = #{dictFlag,jdbcType=INTEGER},
      </if>
      <if test="dictCreatedate != null">
        dict_createdate = #{dictCreatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="dictUpdatedate != null">
        dict_updatedate = #{dictUpdatedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jjx.mytools.entity.Dictdef">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dictdef
    set dict_name = #{dictName,jdbcType=VARCHAR},
      dict_flag = #{dictFlag,jdbcType=INTEGER},
      dict_createdate = #{dictCreatedate,jdbcType=TIMESTAMP},
      dict_updatedate = #{dictUpdatedate,jdbcType=TIMESTAMP}
    where dict_id = #{dictId,jdbcType=INTEGER}
  </update>
</mapper>