package com.jjx.mytools.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DictdefExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public DictdefExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDictIdIsNull() {
            addCriterion("dict_id is null");
            return (Criteria) this;
        }

        public Criteria andDictIdIsNotNull() {
            addCriterion("dict_id is not null");
            return (Criteria) this;
        }

        public Criteria andDictIdEqualTo(Integer value) {
            addCriterion("dict_id =", value, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictIdNotEqualTo(Integer value) {
            addCriterion("dict_id <>", value, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictIdGreaterThan(Integer value) {
            addCriterion("dict_id >", value, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dict_id >=", value, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictIdLessThan(Integer value) {
            addCriterion("dict_id <", value, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictIdLessThanOrEqualTo(Integer value) {
            addCriterion("dict_id <=", value, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictIdIn(List<Integer> values) {
            addCriterion("dict_id in", values, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictIdNotIn(List<Integer> values) {
            addCriterion("dict_id not in", values, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictIdBetween(Integer value1, Integer value2) {
            addCriterion("dict_id between", value1, value2, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dict_id not between", value1, value2, "dictId");
            return (Criteria) this;
        }

        public Criteria andDictNameIsNull() {
            addCriterion("dict_name is null");
            return (Criteria) this;
        }

        public Criteria andDictNameIsNotNull() {
            addCriterion("dict_name is not null");
            return (Criteria) this;
        }

        public Criteria andDictNameEqualTo(String value) {
            addCriterion("dict_name =", value, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameNotEqualTo(String value) {
            addCriterion("dict_name <>", value, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameGreaterThan(String value) {
            addCriterion("dict_name >", value, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameGreaterThanOrEqualTo(String value) {
            addCriterion("dict_name >=", value, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameLessThan(String value) {
            addCriterion("dict_name <", value, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameLessThanOrEqualTo(String value) {
            addCriterion("dict_name <=", value, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameLike(String value) {
            addCriterion("dict_name like", value, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameNotLike(String value) {
            addCriterion("dict_name not like", value, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameIn(List<String> values) {
            addCriterion("dict_name in", values, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameNotIn(List<String> values) {
            addCriterion("dict_name not in", values, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameBetween(String value1, String value2) {
            addCriterion("dict_name between", value1, value2, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictNameNotBetween(String value1, String value2) {
            addCriterion("dict_name not between", value1, value2, "dictName");
            return (Criteria) this;
        }

        public Criteria andDictFlagIsNull() {
            addCriterion("dict_flag is null");
            return (Criteria) this;
        }

        public Criteria andDictFlagIsNotNull() {
            addCriterion("dict_flag is not null");
            return (Criteria) this;
        }

        public Criteria andDictFlagEqualTo(Integer value) {
            addCriterion("dict_flag =", value, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictFlagNotEqualTo(Integer value) {
            addCriterion("dict_flag <>", value, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictFlagGreaterThan(Integer value) {
            addCriterion("dict_flag >", value, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("dict_flag >=", value, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictFlagLessThan(Integer value) {
            addCriterion("dict_flag <", value, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictFlagLessThanOrEqualTo(Integer value) {
            addCriterion("dict_flag <=", value, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictFlagIn(List<Integer> values) {
            addCriterion("dict_flag in", values, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictFlagNotIn(List<Integer> values) {
            addCriterion("dict_flag not in", values, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictFlagBetween(Integer value1, Integer value2) {
            addCriterion("dict_flag between", value1, value2, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("dict_flag not between", value1, value2, "dictFlag");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateIsNull() {
            addCriterion("dict_createdate is null");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateIsNotNull() {
            addCriterion("dict_createdate is not null");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateEqualTo(Date value) {
            addCriterion("dict_createdate =", value, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateNotEqualTo(Date value) {
            addCriterion("dict_createdate <>", value, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateGreaterThan(Date value) {
            addCriterion("dict_createdate >", value, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateGreaterThanOrEqualTo(Date value) {
            addCriterion("dict_createdate >=", value, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateLessThan(Date value) {
            addCriterion("dict_createdate <", value, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateLessThanOrEqualTo(Date value) {
            addCriterion("dict_createdate <=", value, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateIn(List<Date> values) {
            addCriterion("dict_createdate in", values, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateNotIn(List<Date> values) {
            addCriterion("dict_createdate not in", values, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateBetween(Date value1, Date value2) {
            addCriterion("dict_createdate between", value1, value2, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictCreatedateNotBetween(Date value1, Date value2) {
            addCriterion("dict_createdate not between", value1, value2, "dictCreatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateIsNull() {
            addCriterion("dict_updatedate is null");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateIsNotNull() {
            addCriterion("dict_updatedate is not null");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateEqualTo(Date value) {
            addCriterion("dict_updatedate =", value, "dictUpdatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateNotEqualTo(Date value) {
            addCriterion("dict_updatedate <>", value, "dictUpdatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateGreaterThan(Date value) {
            addCriterion("dict_updatedate >", value, "dictUpdatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateGreaterThanOrEqualTo(Date value) {
            addCriterion("dict_updatedate >=", value, "dictUpdatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateLessThan(Date value) {
            addCriterion("dict_updatedate <", value, "dictUpdatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateLessThanOrEqualTo(Date value) {
            addCriterion("dict_updatedate <=", value, "dictUpdatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateIn(List<Date> values) {
            addCriterion("dict_updatedate in", values, "dictUpdatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateNotIn(List<Date> values) {
            addCriterion("dict_updatedate not in", values, "dictUpdatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateBetween(Date value1, Date value2) {
            addCriterion("dict_updatedate between", value1, value2, "dictUpdatedate");
            return (Criteria) this;
        }

        public Criteria andDictUpdatedateNotBetween(Date value1, Date value2) {
            addCriterion("dict_updatedate not between", value1, value2, "dictUpdatedate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dictdef
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dictdef
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}